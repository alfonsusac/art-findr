// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(cuid())
  fullName    String
  email       String
  phoneNumber String
  mitra       Mitra?         @relation(name: "UserAsMitra")
  bookmark    Mitra[]        @relation(name: "UserBookmark")
  calonMitra  CalonMitra?
  location    SeekerAddress?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, phoneNumber])
}

model Mitra {
  expertises     String[]
  considerations String[]
  status         StatusMitra
  pricePerHour   Int?
  pricePerDay    Int?
  pricePerMonth  Int?
  dateOfBirth    DateTime
  allowOvernight Boolean

  userId String @unique
  user   User   @relation(name: "UserAsMitra", fields: [userId], references: [id])

  bookmarkUser String?
  bookmark     User?   @relation(name: "UserBookmark", fields: [bookmarkUser], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum StatusMitra {
  Tersedia
  Sibuk
}

model CalonMitra {
  isFotoDiri     Boolean?
  isFotoKTP      Boolean?
  dateOfBirth    DateTime?
  allowOvernight Boolean?
  expertises     String[]
  considerations String[]
  pricePerHour   Int?
  pricePerDay    Int?
  pricePerMonth  Int?

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model SeekerAddress {
  provinsi  String
  kota      String
  kecamatan String

  userId String @unique
  user   User?  @relation(fields: [userId], references: [id])
}

model VerifikasiOtp {
  otp            Int      @id @unique
  nomorHandphone String
  createdAt      DateTime @default(now())
}
